version: "3.9"
services:
  db:
    image: postgres:16
    restart: unless-stopped
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: Thirumal@714
      PG_APP_USER: evote_app_user
      PG_APP_PASSWORD: Thirumal@714
      PG_AUDITOR_USER: evote_auditor_user
      PG_AUDITOR_PASSWORD: Thirumal@714
    command: >
      postgres -c wal_level=replica
               -c archive_mode=on
               -c archive_command='test ! -f /wal-archive/%f && cp %p /wal-archive/%f'
               -c max_wal_senders=3
               -c shared_buffers=256MB
               -c work_mem=16MB
               -c maintenance_work_mem=128MB
               -c effective_cache_size=1GB
               -c log_min_duration_statement=500
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 10
    volumes:
      - db-data:/var/lib/postgresql/data
      - ./postgres/init:/docker-entrypoint-initdb.d:ro
      - wal-archive:/wal-archive
    networks: [backend]

  app:
    build:
      context: ..
      dockerfile: infra/app/Dockerfile
    image: evote-secure:postgres
    restart: unless-stopped
    depends_on:
      db:
        condition: service_healthy
    environment:
      SPRING_PROFILES_ACTIVE: prod
      SPRING_DATASOURCE_URL:  jdbc:postgresql://db:5432/postgres
      SPRING_DATASOURCE_USERNAME: postgres   # (works, but consider switching to evote_app_user later)
      SPRING_DATASOURCE_PASSWORD: Thirumal@714
      APP_JWT_SECRET: 22dd70e75447d800536bb22fca51dcb1eaa5042da33358cdd8a906ea71e77bd7a2d6691e2e8026d53c185a9615c82b361e1081374878d338db5657e8c3a36c89
    read_only: true
    tmpfs: ["/tmp"]
    security_opt: ["no-new-privileges:true"]
    networks: [backend]
    expose: ["8080"]

  proxy:
    build:
      context: ..                          # project root, so "frontend/" is visible
      dockerfile: infra/reverse-proxy/Dockerfile
    image: evote-proxy:latest
    depends_on: [app]
    restart: unless-stopped
    ports: ["8080:80","8443:443"]          # use https://localhost:8443
    volumes:
      - ./reverse-proxy/tls:/etc/nginx/tls:ro
      - proxy-cache:/var/cache/nginx
    read_only: true
    tmpfs: ["/run","/tmp"]
    security_opt: ["no-new-privileges:true"]
    networks: [backend]

  backup:
    image: alpine:3.20
    depends_on: [db]
    environment:
      PGPASSWORD: Thirumal@714
      POSTGRES_DB: evote
      POSTGRES_USER: postgres
      PGHOST: db
    volumes:
      - ./backup:/backup:ro
      - backups:/var/backups
      - wal-archive:/wal-archive:ro
    entrypoint: ["/bin/sh","-c"]
    command: "crond -f -l 8"

volumes:
  db-data:
  wal-archive:
  backups:
  proxy-cache:

networks:
  backend:
    driver: bridge
