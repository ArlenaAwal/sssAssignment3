worker_processes auto;
events { worker_connections 1024; }
http {
  server_tokens off;
  include       mime.types;
  default_type  application/octet-stream;
  sendfile      on;

  limit_req_zone $binary_remote_addr zone=api:10m rate=30r/s;
  map $http_upgrade $connection_upgrade { default upgrade; '' close; }

  upstream app_upstream { server app:8080; keepalive 32; }

  # HTTP -> HTTPS
  server {
    listen 80;
    server_name _;
    return 301 https://$host$request_uri;
  }

  server {
    listen 443 ssl;
    http2 on;
    server_name _;   # <â€” catch-all (works for localhost or any host)

    ssl_certificate     /etc/nginx/tls/fullchain.pem;
    ssl_certificate_key /etc/nginx/tls/privkey.pem;
    ssl_protocols       TLSv1.2 TLSv1.3;
    ssl_ciphers         HIGH:!aNULL:!MD5;
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    add_header X-Content-Type-Options nosniff;
    add_header X-Frame-Options DENY;
    add_header X-XSS-Protection "1; mode=block";

    root /usr/share/nginx/html;
    index index.html;

    location /api/ {
      proxy_pass http://app_upstream/;
      proxy_http_version 1.1;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection $connection_upgrade;
      limit_req zone=api burst=40 nodelay;
    }

    location / {
      try_files $uri /index.html;
    }
  }
}
